server:
  port: 8080
  host: "0.0.0.0"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s

database:
  mysql:
    host: "localhost"
    port: 3306
    username: "root"
    password: "password"
    database: "proxy_db"
    charset: "utf8mb4"
    parse_time: true
    loc: "Local"
    max_idle_conns: 10
    max_open_conns: 100
    conn_max_lifetime: 3600s

  mongodb:
    uri: "mongodb://localhost:27017"
    database: "proxy_db"
    timeout: 30s
    max_pool_size: 100
    min_pool_size: 10

redis:
  host: "localhost"
  port: 6379
  password: ""
  db: 0
  pool_size: 10
  min_idle_conns: 5
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s

kafka:
  brokers:
    - "localhost:9092"
  producer:
    retry_max: 3
    retry_backoff: 100ms
    required_acks: 1
    compression: "snappy"
  consumer:
    group_id: "proxy-service"
    auto_offset_reset: "earliest"
    enable_auto_commit: true
    auto_commit_interval: 1s

services:
  payment-service:
    name: "payment-service"
    url: "http://localhost:8081"
    health_check: "/health"
    timeout: 30s
    retry_count: 3
    weight: 1
    enabled: true
    headers:
      "Content-Type": "application/json"
      "User-Agent": "proxy-service"

  notification-service:
    name: "notification-service"
    url: "http://localhost:8082"
    health_check: "/health"
    timeout: 30s
    retry_count: 3
    weight: 1
    enabled: true
    headers:
      "Content-Type": "application/json"
      "User-Agent": "proxy-service"

  user-service:
    name: "user-service"
    url: "http://localhost:8083"
    health_check: "/health"
    timeout: 30s
    retry_count: 3
    weight: 1
    enabled: true
    headers:
      "Content-Type": "application/json"
      "User-Agent": "proxy-service"

  order-service:
    name: "order-service"
    url: "http://localhost:8084"
    health_check: "/health"
    timeout: 30s
    retry_count: 3
    weight: 1
    enabled: true
    headers:
      "Content-Type": "application/json"
      "User-Agent": "proxy-service"

  inventory-service:
    name: "inventory-service"
    url: "http://localhost:8085"
    health_check: "/health"
    timeout: 30s
    retry_count: 3
    weight: 1
    enabled: true
    headers:
      "Content-Type": "application/json"
      "User-Agent": "proxy-service"

cache:
  enabled: true
  type: "memory"
  ttl: 5m
  max_size: 1000
  cleanup_interval: 10m

rate_limit:
  enabled: true
  requests_per_minute: 100
  burst_size: 20
  window_size: 1m

circuit_breaker:
  enabled: true
  failure_threshold: 5
  success_threshold: 3
  timeout: 30s
  max_requests: 10

security:
  enabled: true
  require_auth: false
  allowed_origins:
    - "*"
  allowed_methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "OPTIONS"
  allowed_headers:
    - "*"
  max_request_size: 1048576  # 1MB
  validate_input: true
  sanitize_input: true

monitoring:
  enabled: true
  metrics_port: 9090
  log_level: "info"
  log_format: "json"
  collect_interval: 30s

load_balancing:
  enabled: true
  algorithm: "round_robin"  # round_robin, random, least_connections
  health_check: true
  interval: 30s

retry:
  enabled: true
  max_attempts: 3
  initial_delay: 100ms
  max_delay: 5s
  backoff_factor: 2.0

logging:
  level: "info"
  format: "json"
  output: "stdout"
  file:
    enabled: false
    path: "logs/proxy.log"
    max_size: 100
    max_backups: 3
    max_age: 28

websocket:
  enabled: true
  read_buffer_size: 1024
  write_buffer_size: 1024
  handshake_timeout: 10s
  ping_period: 54s
  pong_wait: 60s
  max_message_size: 512

metrics:
  enabled: true
  port: 9090
  path: "/metrics"
  collect_interval: 30s

health_check:
  enabled: true
  interval: 30s
  timeout: 5s
  retry_count: 3

proxy:
  name: "proxy-service"
  version: "1.0.0"
  description: "API Gateway and Proxy Service"
  timeout: 30s
  max_retries: 3
  retry_delay: 1s
  enable_compression: true
  enable_cors: true
  enable_metrics: true
  enable_tracing: false
